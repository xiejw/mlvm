//
// DO NOT EDIT. Generated by 'make generate'
package layers

// Inputs of layers. Typically a list of `Layer`s.
type Inputs interface {
	Iterator() <-chan Layer
}

type InputsBuilder struct {
	data      []Layer
	finalized bool
}

func (impl *InputsBuilder) Iterator() <-chan Layer {
	if !impl.finalized {
		panic("The Build should be called first.")
	}
	c := make(chan Layer)
	go func() {
		for _, item := range impl.data {
			c <- item
		}
	}()
	return c
}

func (impl *InputsBuilder) Append(item Layer) {
	impl.data = append(impl.data, item)
}

func (impl *InputsBuilder) Build() {
	if impl.finalized {
		panic("The Build should not be called twice.")
	}
	impl.finalized = true
}
